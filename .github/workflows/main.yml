name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'

jobs:
  # Job untuk testing
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Run Jest Tests
        run: npm test

  # Job untuk build dan push Docker Image ke Docker Hub
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:$GITHUB_SHA .
          
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:$GITHUB_SHA

  # Job untuk deploy jika branch main
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Deploy to Server (example)
        run: |
          # Contoh perintah deploy, bisa disesuaikan dengan proses deploy Anda
          ssh user@server "docker pull ${{ secrets.DOCKER_USERNAME }}/portofolio-testing:$GITHUB_SHA && docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/portofolio-testing:$GITHUB_SHA"
